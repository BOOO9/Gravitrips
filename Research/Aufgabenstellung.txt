Das Thema "4-Gewinnt" wurde öfters gewählt, lässt sich aber mit unterschiedlichen Features umsetzten. Da Sie eine 3er-Gruppe sind, fügen Sie folgende Anforderungen hinzu:


1) es sollen mehrere Spiele parallel stattfinden können

2) legen Sie fest wie Spieler zugeordnet werden, wenn mehrere Spiele parallel stattfinden

3) es sollen sich Teilnehmer optional als Zuschauer anmelden können, die dann auswählen können, bei welchem Spiel Sie zuschauen können (legen Sie dafür eine zweckmäßige Auswahl fest)

4) Zuschauer werden automatisch abgemeldet, sobald das jeweilige Spiel beendet ist

4) es soll eine Maximalzeit geben, um einen Zug durchzuführen, ansonsten hat der Spieler verloren

5) der Sieger wird erst nach einer vorgegebenen Anzahl von Spielen bestimmt

6) zwischen den Spielen muss eine maximale Zeit für den nächsten ersten Zug eingehalten werden, ansonsten wird das Spiel abgebrochen

7) die Applikationen sollen wie folgt ausgeführt werden können:
    viergewinnt_server [-p <port>][-n <number of games>]
    viergewinnt_client [-i <server ip>] [-p <server port>]


Der Parameter für die -p-Option gibt den TCP-Port des Sockets an, über den kommuniziert werden soll, die -n-Option gibt die Anzahl der durchzuführenden Spiele an. Der Server soll auf allen möglichen Schnittstellen/IPs lauschen. Beim Client soll zusätzlich mittels -i Parameter die IP-Adresse des Servers angeben werden können. Sollte dies fehlen, wird 127.0.0.1 verwendet. Wird kein Port übergeben, soll ein passender, vordefinierter Port verwendet werden, der in Server und Client gleich ist (z.B. die User-ID eines Autors). Sollten ungültige Parameter übergeben werden, soll zumindest eine usage message ausgegeben werden.


Ich habe Ihnen die Team-Kennzeichnung "M" zugeordnet. 
